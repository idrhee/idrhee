{
    "collab_server" : "",
    "contents" : "\nrm(list=ls())\n\nsetwd(\"/Users/idrhee/Downloads/us.sitesucker.mac.sitesucker/info.mzalendo.com/hansard/sitting/senate/\")\n\n# read file\nfiles <- list.files()\nend <- length(files)-1\n#end <- 5\n\ndf_senate <- data.frame()\nfor (k in 1:end){\n  print(paste(k, \"/\", end))\n  site <- files[k]\n  k\n  # clean html\n  htmlCode = readLines(site)\n  htmlCode <- trimws(htmlCode)\n  htmlCode <- htmlCode[htmlCode!=\"\"]\n  htmlCode <- htmlCode[!grepl(\"^\\\\(\", htmlCode)]\n  \n  # keep names\n  htmlCode <- gsub(\"<strong>\", \"_NAME_\", htmlCode)\n  htmlCode <- gsub(\"<h2>:\", \"\", htmlCode)\n  \n  # keep headers\n  htmlCode <- gsub(\"<h2>\", \"_HEADER_\", htmlCode)\n  \n  # remove all other html tags\n  cleanFun <- function(htmlString) {\n    return(gsub(\"<.*?>\", \"\", htmlString))\n  }\n  \n  htmlCode <- cleanFun(htmlCode)\n  htmlCode <- trimws(htmlCode)\n  htmlCode <- htmlCode[!grepl(\"^$\", htmlCode)]\n  \n  # save as data frame\n  dat <- data.frame(ind=1:length(htmlCode), code=htmlCode)\n  \n  # remove unnecessary css\n  first_header_position <- dat$ind[grepl(\"^_HEADER\", dat$code)][1]\n  dat <- dat[dat$ind>= first_header_position,]\n  \n  end_header_position <- dat$ind[grepl(\"^search Hansard\", dat$code)][1]\n  dat <- dat[dat$ind<= end_header_position,]\n  \n  # fix class\n  dat$code <- as.character(dat$code)\n  \n  # remove other unwanted stuff\n  dat <- dat[!grepl(\"SENATE DEBATES|^Disclaimer:|SENATEDEBATES\", dat$code),]\n  \n  # fix rowname index\n  rownames(dat) <- 1:nrow(dat)\n  dat$ind <- 1:nrow(dat)\n  \n  # create header placeholder\n  dat$header <- NA\n  dat$header_dum <- 1:nrow(dat)\n  dat$header_dum[grepl(\"^_HEADER\", dat$code)] <- 0\n  \n  header_index <- as.numeric(dat$ind[grepl(\"^_HEADER\", dat$code)])\n  dat$header[rownames(dat) %in% header_index] <- dat$code[rownames(dat) %in% header_index] \n  \n  \n  # merge headers\n  for (i in 1:length(dat$header_dum)){\n    if(i<length(dat$header_dum)){\n      if(dat$header_dum[i]==dat$header_dum[i+1] & dat$header_dum[i]!=0){\n        dat$header[i] <- paste(dat$code[i], dat$code[i+1])\n      }\n    }\n    if(i>1){\n      if(dat$header_dum[i]==dat$header_dum[i-1] & dat$header_dum[i]!=0){\n        dat$header[i] <- paste(dat$code[i], dat$code[i-1])\n      }\n    }\n  }\n  \n  \n  new_aa <- vector()\n  aa <- rle(dat$header_dum)$length\n  \n  for (i in 1:length(aa)){\n    if(aa[i]>1){\n      new_val <- c(aa[i], rep(NA, (aa[i]-1)))\n    } else{\n      new_val <- aa[i]\n    }\n    new_aa <- c(new_aa, new_val)\n  }\n  \n  dat$header_dum <- new_aa\n  \n  more_than_one_header <- dat$ind[which(dat$header_dum>1)]\n  for (i in more_than_one_header){\n    dat$header[i] <- paste(dat$code[i:(i+dat$header_dum[i]-1)], collapse = \" > \")\n  }\n  \n  dat <- dat[!is.na(dat$header_dum),]\n  dat$header <- gsub(\"_HEADER_\", \"\", dat$header)\n  library(zoo)\n  dat$header <- na.locf(dat$header)\n  \n  \n  dat <- dat[!grepl(\"^_HEADER_\", dat$code),]\n  dat$header_dum <- NULL\n  \n  \n  # merge speeches\n  dat$name <- NA\n  dat$speech <- dat$code\n  dat$name_dum <- 1\n  dat$name_dum[grepl(\"^_NAME\", dat$code)] <- 0\n  dat$speech_dum <- NULL\n  \n  # fix rowname index\n  rownames(dat) <- 1:nrow(dat)\n  dat$ind <- 1:nrow(dat)\n  \n  name_index <- as.numeric(dat$ind[grepl(\"^_NAME\", dat$code)])\n  dat$name[rownames(dat) %in% name_index] <- dat$code[rownames(dat) %in% name_index] \n  \n  \n  # merge speeches\n  new_aa <- vector()\n  aa <- rle(dat$name_dum)$length\n  aa\n  for (i in 1:length(aa)){\n    if(aa[i]>1){\n      new_val <- c(aa[i], rep(NA, (aa[i]-1)))\n    } else{\n      new_val <- aa[i]\n    }\n    new_aa <- c(new_aa, new_val)\n  }\n  \n  dat$name_dum <- new_aa\n  more_than_one_speech_line <- dat$ind[which(dat$name_dum>1)]\n  for (i in more_than_one_speech_line){\n    dat$speech[i] <- paste(dat$code[i:(i+dat$name_dum[i]-1)], collapse = \" > \")\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  if(is.na(dat$name[1])){\n    dat <- dat[-1,]\n  }\n  \n  dat$name <- na.locf(dat$name)\n  dat <- dat[!grepl(\"^_NAME_\", dat$speech),]\n  dat <- dat[!is.na(dat$name_dum),]\n  dat$code <- NULL\n  dat$name <- gsub(\"_NAME_\", \"\", dat$name)\n  dat$name_dum <- NULL\n  dat$ind <- NULL\n  rownames(dat) <- 1:nrow(dat)\n  \n  date <- gsub(\".*/\", \"\", site)\n  date <- gsub(\".html\", \"\", date)\n  dat$date <- date\n  \n  df_senate <- rbind(df_senate, dat)\n}\n\n\ndf_senate1 <- df_senate\n#df_senate <- df_senate1\n\n# Descriptive -------------------------------------------------------------\n\nunique_names <- unique(df_senate$name)\nunique_names <- unique_names[order(unique_names)]\nunique_names\n\ndf_senate$name[grepl(\"Temporary Speaker\", df_senate$name, ignore.case = T)] <- \"The Temporary Speaker\"\ndf_senate$name[grepl(\"Temporary Chairperson\", df_senate$name, ignore.case = T)] <- \"The Temporary Chairperson\"\ndf_senate$name <- gsub(\"The Senator for\", \"\", df_senate$name)\ndf_senate$name[grepl(\"Majority\", df_senate$name, ignore.case = T)] <- \"The Senate Majority Leader\"\ndf_senate$name[grepl(\"Minority\", df_senate$name, ignore.case = T)] <- \"The Senate Minority Leader\"\ndf_senate$name[grepl(\"Deputy Speaker\", df_senate$name, ignore.case = T)] <- \"The Deputy Speaker\"\ndf_senate$name[grepl(\"The Speaker\", df_senate$name, ignore.case = T)] <- \"The Speaker\"\ndf_senate$name <- gsub(\".*Sen. \", \"Sen. \", df_senate$name)\ndf_senate <- df_senate[!grepl(\"member\", df_senate$name, ignore.case = T),]\ndf_senate <- df_senate[!grepl(\"an hon. \", df_senate$name, ignore.case = T),]\ndf_senate <- df_senate[!grepl(\"an. hon. \", df_senate$name, ignore.case = T),]\ndf_senate <- df_senate[!grepl(\"senator\", df_senate$name, ignore.case = T),]\ndf_senate <- df_senate[!grepl(\"teller\", df_senate$name, ignore.case = T),]\ndf_senate <- df_senate[!grepl(\"Abstention|Abstain|^\\\\(|^Noes\", df_senate$name, ignore.case = T),]\ndf_senate <- df_senate[nchar(df_senate$name)>2,]\ndf_senate$name <- trimws(df_senate$name)\ndf_senate <- df_senate[!grepl(\"^the \", df_senate$name, ignore.case = T),]\ndf_senate$name <- str_replace_all(df_senate$name, \"[[:punct:]]\", \"\")\ndf_senate <- df_senate[!grepl(\"Auditor\", df_senate$name, ignore.case = T),]\ndf_senate$name <- gsub(\"\\\\d\", \"\", df_senate$name)\ndf_senate <- df_senate[!grepl(\"justice\", df_senate$name, ignore.case = T),]\ndf_senate <- df_senate[!grepl(\"assembly\", df_senate$name, ignore.case = T),]\ndf_senate <- df_senate[!grepl(\"^that\", df_senate$name, ignore.case = T),]\ndf_senate <- df_senate[!grepl(\"Agriculture|Amendment|shall|clause|governments|education|abuse|speaker|motions|drought|committee|policy|water|farmers|livestrock|advocate\", df_senate$name, ignore.case = T),]\n\ntable(df_senate$name)\n\n",
    "created" : 1506387153125.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "736784093",
    "id" : "A962F07F",
    "lastKnownWriteTime" : 1506406631,
    "last_content_update" : 1506406631955,
    "path" : "~/Dropbox/_doc/_archive/other/_KH/0_inbox/hansard_text/20170925_test.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}