{
    "collab_server" : "",
    "contents" : "##################\n# GSR ILAR: Dyadic Dataset for BRICS\n# Created by Inbok Rhee\n# Updated Jul 18, 2016\n##################\n\n\n# 0. Preamble -------------------------------------------------------------\nrm(list=ls())\n\nsetwd(\"~/Dropbox/_doc/_archive/2016-2017/GSR_ILAR/Data/2_Dyadic_Raw\")\nlibrary(countrycode)\nlibrary(dplyr)\nlibrary(reshape2)\nlibrary(foreign)\n\n\n# 1. Create Dyadic Data Placeholder ---------------------------------------\n?countrycode\ndat_cow <- read.csv(\"COW country codes.csv\",  stringsAsFactors = FALSE) # load cow country code list as starting point\n\nccode1 <- unique(dat_cow$CCode) # get ccode only\nhead(dat_cow)\n# create all combinations\ndat <- data.frame()\n\nfor (i in ccode1){\n  dat <- rbind(dat, cbind(ccode1, i))\n}\n\ndat <- rename(dat, ccode2 = i)\ndat <- dat[order(dat$ccode1),] \n\ndat$COW_StateNme1 <- countrycode(dat$ccode1, \"cown\", \"country.name\")\ndat$COW_StateNme2 <- countrycode(dat$ccode2, \"cown\", \"country.name\")\n\ndat <- dat[dat$ccode1!=dat$ccode2,] # remove self-rel\n\n# leave only dyads including US and BRICs\ncountrycode(c(\"United Kingdom\", \"France\", \"Germany\", \"Japan\"), \"country.name\", \"cown\")\n?countrycode\ncountries <- c(2, 140, 365, 750, 710, 200, 220, 255, 740)\ndat <- dat %>% filter(ccode1 %in% countries | ccode2 %in% countries)\nlength(unique(dat$ccode1))\n\ndf <- data.frame()\n\ndat$ccode1 <- as.numeric(dat$ccode1)\ndat$ccode2 <- as.numeric(dat$ccode2)\n\n\nrm(list=setdiff(ls(), \"dat\"))\n\n\n# 1. Trade ----------------------------------------------------------------\n\n\n# dat_trade <- read.csv(\"./COW_Trade/COW_Trade_3.0/dyadic_trade_3.0.csv\", stringsAsFactors = FALSE)\n# \n# dat_trade <- rename(dat_trade, cname1 = importer1)\n# dat_trade <- rename(dat_trade, cname2 = importer2)\n# dat_trade <- rename(dat_trade, trade_flow1 = flow1)\n# dat_trade <- rename(dat_trade, trade_flow2 = flow2)\n# \n# dat_trade$cname1 <- countrycode(dat_trade$ccode1, \"cown\", \"country.name\")\n# dat_trade$cname2 <- countrycode(dat_trade$ccode2, \"cown\", \"country.name\")\n# dat_trade <- dat_trade[c(1:7)]\n# table(dat_trade$year)\n# \n# dat_trade <- dat_trade %>% filter(year >= 2001)\n# dat_trade$ccode1 <- as.nuemric(dat_trade$ccode1)\n# dat_trade$ccode2 <- as.nuemric(dat_trade$ccode2)\n# dat_trade$year <- as.nuemric(dat_trade$year)\n# \n# str(dat_trade)\n# dat1 <- left_join(dat, dat_trade)\n# dat <- dat1\n\n# 1.1. CEPII TRADE Data: 1827-2014\ndat_trade2 <- read.dta(\"CEPII_Trade/TRADHIST_WP.dta\")\n\ndat_trade2$ccode1 <- countrycode(dat_trade2$iso_o, \"iso3c\", \"cown\")\ndat_trade2$ccode2 <- countrycode(dat_trade2$iso_d, \"iso3c\", \"cown\")\n\n#dat_trade2 <- rename(dat_trade2, cepii_trade = FLOW)\n#dat_trade2 <- rename(dat_trade2, cepii_bitariff = BITARIFF)\n\ndat_trade2$ccode1 <- as.numeric(dat_trade2$ccode1)\ndat_trade2$ccode2 <- as.numeric(dat_trade2$ccode2)\ndat_trade2$year <- as.numeric(dat_trade2$year)\nstr(dat_trade2)\nkeep <- c(\"ccode1\", \"ccode2\", \"year\", \"FLOW\", \"BITARIFF\")\n\n# FLOW\ndat_trade2 <- dat_trade2[keep]\n\ndat1 <- full_join(dat, dat_trade2)\ndat <- dat1\n\n# 2. FDI ------------------------------------------------------------------\ndat_fdi_inflow <- read.csv(\"./FDI/UNCTAD/inflow.csv\", stringsAsFactors = FALSE)\ndat_fdi_instock <- read.csv(\"./FDI/UNCTAD/instock.csv\", stringsAsFactors = FALSE)\ndat_fdi_outflow <- read.csv(\"./FDI/UNCTAD/outflow.csv\", stringsAsFactors = FALSE)\ndat_fdi_outstock <- read.csv(\"./FDI/UNCTAD/outstock.csv\", stringsAsFactors = FALSE)\n\nstr(dat_fdi_inflow)\nstr(dat_fdi_instock)\nstr(dat_fdi_outflow)\nstr(dat_fdi_outstock)\n\ndat_fdi_outflow$Year <- as.integer(dat_fdi_outflow$Year)\n\ndat_fdi_inflow <- rename(dat_fdi_inflow, fdi_inflow = value)\ndat_fdi_outflow <- rename(dat_fdi_outflow, fdi_outflow = value)\ndat_fdi_instock <- rename(dat_fdi_instock, fdi_instock = value)\ndat_fdi_outstock <- rename(dat_fdi_outstock, fdi_outstock = value)\n\ndat_fdi_flow <- full_join(dat_fdi_inflow, dat_fdi_outflow)\ndat_fdi_stock <- full_join(dat_fdi_instock, dat_fdi_outstock)\n\ndat_fdi <- full_join(dat_fdi_flow, dat_fdi_stock)\nstr(dat_fdi)\ndat_fdi$ccode1 <- countrycode(dat_fdi$area, \"iso3c\", \"cown\")\ndat_fdi$ccode2 <- countrycode(dat_fdi$Reporting.Economy, \"country.name\", \"cown\")\ndat_fdi <- rename(dat_fdi, year = Year)\n\ndat_fdi <- dat_fdi[c(3:9)]\ndat_fdi$ccode1 <- as.numeric(dat_fdi$ccode1)\ndat_fdi$ccode2 <- as.numeric(dat_fdi$ccode2)\ndat_fdi$year <- as.numeric(dat_fdi$year)\ndat_fdi$fdi_inflow <- as.numeric(dat_fdi$fdi_inflow)\ndat_fdi$fdi_outflow <- as.numeric(dat_fdi$fdi_outflow)\ndat_fdi$fdi_instock <- as.numeric(dat_fdi$fdi_instock)\ndat_fdi$fdi_outstock <- as.numeric(dat_fdi$fdi_outstock)\n\ndat_fdi <- dat_fdi[!duplicated(dat_fdi),]\ndat_fdi <- dat_fdi[!is.na(dat_fdi$year),]\n\ndat1 <- full_join(dat, dat_fdi)\ndat1 <- dat1[!duplicated(dat1),]\n\ndat2 <- dat1 %>% select(ccode1, ccode2, year)\nrownames(dat2[duplicated(dat2),])[1:2]\n\ndat <- dat1[!(rownames(dat1) %in% rownames(dat2[duplicated(dat2),])),]\n\ntable(dat_fdi$year)\n\nrm(list=setdiff(ls(), \"dat\"))\n\n# 3. UN Affinity ----------------------------------------------------------\ndat_un <- read.table(\"./UN_Roll_Call/Idealpoints.tab\", sep=\"\\t\", header=TRUE, stringsAsFactors=FALSE)\n\ndat_un <- rename(dat_un, year = Year)\ndat_un <- rename(dat_un, ccode1 = ccode)\ndat_un <- rename(dat_un, Idealpoint = Idealpoint)\n\nkeep <- c(\"year\", \"ccode1\", \"Idealpoint\", \"PctAgreeUS\", \"PctAgreeRUSSIA\", \"PctAgreeBrazil\", \"PctAgreeChina\", \"PctAgreeIndia\", \"PctAgreeIsrael\", \"IdealImportant\")\ndat_un <- dat_un[keep]\nstr(dat_un)\ntable(dat_un$year)\n\ndat1 <- full_join(dat, dat_un)\ndat <- dat1\n\n# 4. Distance -------------------------------------------------------------\n# use the csv file\ndat_distance <- read.csv(\"./Capital_Distance/capdist.csv\", stringsAsFactors = FALSE)\ndat_distance <- rename(dat_distance, ccode1 = numa)\ndat_distance <- rename(dat_distance, ccode2 = numb)\ndat_distance <- rename(dat_distance, kmdist = kmdist)\n\nkeep <- c(\"ccode1\", \"ccode2\", \"kmdist\")\ndat_distance <- dat_distance[keep]\ndat_distance <- dat_distance[!duplicated(dat_distance),]\n\ndat1 <- full_join(dat, dat_distance)\ndat <- dat1\n\n\n# 5. Arms Treaty ----------------------------------------------------------\ndat_arms_treaty <- read.table(\"./Arms_Treaty/Data/dyadic.txt\", sep = \" \", header=TRUE, stringsAsFactors=FALSE)\n\nkeep <- c(\"ccode1\", \"ccode2\", \"year\", \"defense\", \"lntrade\", \"wca\")\ndat_arms_treaty <- dat_arms_treaty[keep]\n\ntable(dat_arms_treaty$year)\n\ndat1 <- full_join(dat, dat_arms_treaty)\ndat <- dat1\n\n# 6. Formal Alliance ------------------------------------------------------\ndat_alliance <- read.csv(\"./Alliance/alliance_v4.1_by_dyad_yearly.csv\", stringsAsFactors = FALSE)\ndat_alliance <- rename(dat_alliance, COW_defense = defense)\ndat_alliance <- rename(dat_alliance, COW_neutrality = neutrality)\ndat_alliance <- rename(dat_alliance, COW_nonaggression = nonaggression)\ndat_alliance <- rename(dat_alliance, COW_entente = entente)\n\nkeep <- c(\"ccode1\", \"ccode2\", \"COW_defense\", \"COW_neutrality\", \"COW_nonaggression\", \"COW_entente\", \"year\")\ndat_alliance <- dat_alliance[keep]\ndat_alliance <- dat_alliance[!duplicated(dat_alliance),]\n\ndat1 <- full_join(dat, dat_alliance)\n\ndat2 <- dat1 %>% select(ccode1, ccode2, year)\nrownames(dat2[duplicated(dat2),])[1:2]\n\ndat <- dat1[!(rownames(dat1) %in% rownames(dat2[duplicated(dat2),])),]\n\nrm(list=setdiff(ls(), \"dat\"))\n\n# 7. Trade Costs -------------------------------------------------------------\ndat_tradecosts <- read.csv(\"./Trade_Costs/Trade_Costs.csv\", stringsAsFactors = FALSE)\nstr(dat_tradecosts)\n\ndat_tradecosts <- melt(dat_tradecosts, \n                    id.vars = c(\"Reporter.Name\", \"Reporter.Code\", \"Partner.Name\", \"Partner.Code\", \"Sector\", \"Sector.Code\"),\n                    measure.vars = c(\"X1990..YR1990.\", \"X1991..YR1991.\", \"X1992..YR1992.\", \"X1993..YR1993.\", \"X1994..YR1994.\", \"X1995..YR1995.\",\n                                     \"X1996..YR1996.\", \"X1997..YR1997.\", \"X1998..YR1998.\", \"X1999..YR1999.\", \"X2000..YR2000.\", \n                                     \"X2001..YR2001.\", \"X2002..YR2002.\", \"X2003..YR2003.\", \"X2004..YR2004.\", \"X2005..YR2005.\",\n                                     \"X2006..YR2006.\", \"X2007..YR2007.\", \"X2008..YR2008.\", \"X2009..YR2009.\", \"X2010..YR2010.\",\n                                     \"X2011..YR2011.\", \"X2012..YR2012.\", \"X2013..YR2013.\"))\ndat_tradecosts$variable <- as.character(dat_tradecosts$variable)\nfor (i in 1990:2013){\n  dat_tradecosts$variable[grep(i, dat_tradecosts$variable)] <- i\n}\n\ndat_tradecosts$ccode1 <- countrycode(dat_tradecosts$Reporter.Code, \"iso3c\", \"cown\")\ndat_tradecosts$ccode2 <- countrycode(dat_tradecosts$Partner.Code, \"iso3c\", \"cown\")\ndat_tradecosts <- rename(dat_tradecosts, year = variable)\ndat_tradecosts <- rename(dat_tradecosts, tradecosts = value)\ndat_tradecosts$year <- as.numeric(dat_tradecosts$year)\n\n# missing are for non-states, e.g. American Samoa\ndat_tradecosts <- dat_tradecosts[c(7:10)]\n\ndat1 <- full_join(dat, dat_tradecosts)\ndat <- dat1\n\n# 8. Migration ------------------------------------------------------------\ndat_migration <- read.csv(\"./Migration/Migration.csv\", stringsAsFactors = FALSE)\nstr(dat_migration)\n\ndat_migration <- melt(dat_migration, \n                       id.vars = c(\"Country.Origin.Name\", \"Country.Origin.Code\", \"Migration.by.Gender.Name\", \"Migration.by.Gender.Code\", \"Country.Dest.Name\", \"Country.Dest.Code\"),\n                       measure.vars = c(\"X1960..1960.\", \"X1970..1970.\",\"X1980..1980.\",\"X1990..1990.\",\"X2000..2000.\"))\n\ndat_migration$variable <- as.character(dat_migration$variable)\n\nfor (i in c(1960, 1970, 1980, 1990, 2000)){\n  dat_migration$variable[grep(i, dat_migration$variable)] <- i\n}\n\ndat_migration$variable <- as.character(dat_migration$variable)\ndat_migration$variable <- as.numeric(dat_migration$variable)\n\ndat_migration$ccode1 <- countrycode(dat_migration$Country.Origin.Code, \"iso3c\", \"cown\")\ndat_migration$ccode2 <- countrycode(dat_migration$Country.Dest.Code, \"iso3c\", \"cown\")\ndat_migration <- rename(dat_migration, year = variable)\ndat_migration <- rename(dat_migration, migration = value)\ndat_migration$year <- as.numeric(dat_migration$year)\n\nstr(dat_migration)\n# missing are for non-states, e.g. American Samoa\ndat_migration <- dat_migration[c(7:10)]\n\ndat1 <- full_join(dat, dat_migration)\ndat <- dat1\n\n# 9. Common Language ------------------------------------------------------\ndat_lang <- read.dta(\"./Language/ling_web.dta\")\ndat_lang$ccode1 <- countrycode(dat_lang$iso_o, \"iso3c\", \"cown\")\ndat_lang$ccode2 <- countrycode(dat_lang$iso_d, \"iso3c\", \"cown\")\n\n\nstr(dat_lang)\ndat_lang <- rename(dat_lang, lang_col = col)\ndat_lang <- rename(dat_lang, lang_csl = csl)\ndat_lang <- rename(dat_lang, lang_cnl = cnl)\n\nkeep <- c(\"ccode1\", \"ccode2\", \"lang_col\", \"lang_csl\", \"lang_cnl\")\ndat_lang <- dat_lang[keep]\nstr(dat_lang)\nstr(dat)\ndat_lang <- dat_lang[!duplicated(dat_lang),]\ndat_lang <- dat_lang[!is.na(dat_lang$ccode1),]\ndat_lang <- dat_lang[!is.na(dat_lang$ccode2),]\ndat_lang$ccode1 <- as.numeric(dat_lang$ccode1)\ndat_lang$ccode2 <- as.numeric(dat_lang$ccode2)\n\ndat1 <- left_join(dat, dat_lang)\ndat <- dat1\n\nrm(list=setdiff(ls(), \"dat\"))\n\n# 9. Save ----------------------------------------------------------------\n\nwrite.csv(dat, file=\"dyadic_dat.csv\")\n\nsave(dat, file=\"dyadic.rdata\")\n\ndat[is.na(dat$arms_defense) & is.na(dat$arms_wca) & is.na(dat$alliance_defense) & is.na(dat$alliance_neutrality) & is.na(dat$alliance_nonaggression) & is.na(dat$alliance_entente), 3:4]\n\n",
    "created" : 1506463270113.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2453568483",
    "id" : "C9D67214",
    "lastKnownWriteTime" : 1476927087,
    "last_content_update" : 1476927087,
    "path" : "~/Dropbox/shared/GSR_ILAR/Data/2_dyadic/1_codes/0_Gather.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}